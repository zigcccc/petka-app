name: Code Quality
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-test:
    name: Lint, test
    runs-on: ubuntu-latest
    # Let the job post results back to the PR (Sonar, test checks, …)
    permissions:
      contents: read
      pull-requests: write

    steps:
      # 1️⃣  Pull the source
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣  Install PNPM (no auto‑install yet)
      - uses: pnpm/action-setup@v4     #  [oai_citation:1‡github.com](https://github.com/pnpm/action-setup)
        with:
          run_install: false

      # 3️⃣ Set up Node + cache PNPM store
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      # 4️⃣  Install deps (cache hit makes this fast)
      - name: Install deps
        run: pnpm install --frozen-lockfile

      # 5️⃣  Lint
      - name: Lint
        run: pnpm run lint

      # 6️⃣  Type‑check
      - name: Typecheck
        run: pnpm run typecheck

      # 7️⃣  Unit tests (creates coverage/lcov.info)
      - name: Test
        run: pnpm run test:coverage

      # 8️⃣  Upload coverage artefact
      - name: Upload coverage artefact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  sonar:
    name: Sonar analysis
    needs: lint-test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: ./coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  expo-preview:
    needs: lint-test
    runs-on: ubuntu-latest
    name: Publish Expo Preview
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4     #  [oai_citation:1‡github.com](https://github.com/pnpm/action-setup)
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup ENV
        run: |
          touch .env
          echo "CONVEX_DEPLOYMENT=${{ secrets.CONVEX_DEPLOYMENT_DEV }}" >> .env
          echo "EXPO_PUBLIC_CONVEX_URL=${{ vars.CONVEX_URL_DEV }}" >> .env
          echo "SENTRY_AUTH_TOKEN=${{secrets.SENTRY_AUTH_TOKEN}}" >> .env

      - name: Deploy Convex to Dev Cloud 🚀
        run: pnpx convex dev --once
        env:
          CONVEX_DEPLOY_KEY: ${{secrets.CONVEX_DEPLOYMENT_PROD}}

      - name: Create preview
        uses: expo/expo-github-action/preview@v8
        with:
          command: eas update --auto --branch ${{ github.event.pull_request.head.ref }}

      - name: Upload source maps to Sentry
        run: pnpx sentry-expo-upload-sourcemaps dist
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}